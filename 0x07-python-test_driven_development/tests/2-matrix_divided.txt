# Run test with python3 -m doctest -v ./tests/2-matrix_divided.txt

First import method to test
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test cases for the matrix_divided function

# Dividing a matrix by 2
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Dividing a matrix by 0 (should raise ZeroDivisionError)
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Dividing a non-matrix by 2 (should raise TypeError)
>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Dividing a matrix with rows of different sizes (should raise TypeError)
>>> matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Dividing a matrix with non-numeric values (should raise TypeError)
>>> matrix_divided([[1, 2, 3], [4, "5", 6], [7, 8, 9]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Dividing a matrix by 2.5
>>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 2.5)
[[0.6, 1.0], [1.4, 1.8]]
