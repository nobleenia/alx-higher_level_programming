# Run test with python3 -m doctest -v ./tests/101-lazy_matrix_mul.txt

First import method to test
>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

# Test case for the lazy_matrix_mul function

# Import the necessary modules
>>> import numpy as np
>>> from lazy_matrix_mul import lazy_matrix_mul

# Create two NumPy arrays for testing
>>> matrix_a = np.array([[1, 2], [3, 4]])
>>> matrix_b = np.array([[5, 6], [7, 8]])

# Test matrix multiplication
>>> result = lazy_matrix_mul(matrix_a, matrix_b)
>>> result
array([[19, 22],
       [43, 50]])

# Test case for matrices with incompatible dimensions
>>> matrix_c = np.array([[1, 2], [3, 4]])
>>> matrix_d = np.array([[5, 6, 7], [8, 9, 10]])
>>> lazy_matrix_mul(matrix_c, matrix_d)
Traceback (most recent call last):
    ...
ValueError: shapes (2,2) and (2,3) not aligned: 2 (dim 1) != 3 (dim 0)

# Test case for matrices with compatible dimensions
>>> matrix_e = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
>>> matrix_f = np.array([[9, 8, 7], [6, 5, 4], [3, 2, 1]])
>>> result = lazy_matrix_mul(matrix_e, matrix_f)
>>> result
array([[ 30,  24,  18],
       [ 84,  69,  54],
       [138, 114,  90]])
