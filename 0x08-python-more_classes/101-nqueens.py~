#!/usr/bin/python3
"""

"""
import sys


if __name__ == "__main__":
    queens = []
    if len(sys.argv) != 2:
        print("Usage: nqueens N")
        exit(1)

    if sys.argv[1].isdigit() is False:
        print("N must be a number")
        exit(1)

    num = int(sys.argv[1])
    if num < 4:
        print("N must be at least 4")
        exit(1)

    for i in range(num):
        queens.append([i, None])

    def queen_exist(row_y):
        """
        """
        for i in range(num):
            if row_y == queens[i][1]:
                return True
        return False

    def reject_solution(row_x, row_y):
        """
        """
        if queen_exist(row_y):
            return False
        i = 0
        while(i < x):
            if abs(queens[i][1] - row_y) == abs(i - row_x):
                return False
            i += 1
        return True

    def clear_solution(row_x):
        """
        """
        for i in range(row_x, num):
            queens[i][1] = None

    def nqueens(row_x):
        """
        """
        for i in range(num):
            clear_solution(row_x)
            if reject_solution(row_x, i):
                queens[row_x][1] = i
                if (row_x == num - 1):
                    print(queens)
                else:
                    nqueens(row_x + 1)

    nqueens(0)
